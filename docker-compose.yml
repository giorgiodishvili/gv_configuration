version: '3.8'

services:
  hazelcast:
    image: hazelcast/hazelcast:latest
    container_name: hazelcast
    ports:
      - "5701:5701"
    environment:
      - HZ_CLUSTER_NAME=my-cluster
    networks:
      - my_network

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: test
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - my_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
    ports:
      - "2181:2181"
    networks:
      - my_network


  kafka-1:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
#    environment:
#      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9094,OUTSIDE://0.0.0.0:9092
#      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:9094,OUTSIDE://localhost:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_BROKER_ID: 1
    depends_on:
      - zookeeper
    networks:
      - my_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka-1
    ports:
      - 8090:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:19092
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - my_network

  order-service:
    build:
      context: ../order_management
      dockerfile: Dockerfile
    environment:
      JDBC_URL: jdbc:postgresql://postgres:5432/test
      DB_USERNAME: myuser
      DB_PASSWORD: mypassword
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka-1:19092
      HAZELCAST_URL: hazelcast:5701
    ports:
      - "8085:8085"
    depends_on:
      - postgres
      - kafka-1
      - hazelcast
    networks:
      - my_network

  user-service:
    build:
      context: ../user_management
      dockerfile: Dockerfile
    environment:
      JDBC_URL: jdbc:postgresql://postgres:5432/test
      DB_USERNAME: myuser
      DB_PASSWORD: mypassword
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka-1:19092
      HAZELCAST_URL: hazelcast:5701
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - kafka-1
      - hazelcast
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  postgres_data:
